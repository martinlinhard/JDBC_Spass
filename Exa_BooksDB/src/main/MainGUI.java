/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import beans.Book;
import beans.Genre;
import beans.MergeResult;
import beans.SearchState;
import bl.BookListModel;
import db.DB_Access;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import utils.MergeHelper;

/**
 *
 * @author martin
 */
public class MainGUI extends javax.swing.JFrame {

    private BookListModel blm;

    private List<Book> allBooks;
    private Set<Genre> allGenres;
    private Set<String> allPublishers;

    private DB_Access dba;

    private SearchState currentSearchState = SearchState.BOOK;

    private String authorSearchText = "";
    private String bookSearchText = "";

    private String currentGenre = "";
    private String currentPublisher = "";

    /**
     * Creates new form MainGUI
     *
     * @throws java.sql.SQLException
     * @throws java.lang.ClassNotFoundException
     * @throws java.io.FileNotFoundException
     */
    public MainGUI() throws SQLException, ClassNotFoundException, FileNotFoundException {
        initComponents();
        this.blm = new BookListModel();
        this.bookList.setModel(this.blm);

        this.init();
    }

    private void init() throws SQLException, ClassNotFoundException, FileNotFoundException {
        this.dba = new DB_Access();

        this.updateFilters("", "", "", "", "");

        this.initGenres();
        this.initPublishers();
    }

    private void initGenres() {
        this.allGenres.add(new Genre("Genres"));
        this.allGenres.stream().map(Genre::getName).forEach(this.cbGenre::addItem);
    }

    private void initPublishers() {
        this.allPublishers.add("Publishers");
        this.allPublishers.stream().forEach(this.cbPublishers::addItem);
    }

    private void updateFilters(String firstname, String lastname, String title, String genre, String publisher) throws SQLException {
        List<Book> books = this.dba.getBooksForCriteria(firstname, lastname, title, genre, publisher);
        MergeResult mergeBooks = MergeHelper.mergeBooks(books);

        this.allBooks = mergeBooks.getAllBooks();
        this.allGenres = mergeBooks.getAllGenres();
        this.allPublishers = mergeBooks.getAllPublishers();

        System.out.println("the size is: " + this.allPublishers.size());

        this.blm.setAllBooks(allBooks);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbPublishers = new javax.swing.JComboBox<>();
        tfSearchText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbGenre = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookList = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        htmlOutput = new javax.swing.JEditorPane();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Suchen"));
        jPanel1.setLayout(new java.awt.GridLayout(2, 4));

        jLabel1.setText("Verlag");
        jPanel1.add(jLabel1);

        cbPublishers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onPublisherSelected(evt);
            }
        });
        jPanel1.add(cbPublishers);

        tfSearchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onFilterTextChanged(evt);
            }
        });
        jPanel1.add(tfSearchText);

        jLabel2.setText("Genre");
        jPanel1.add(jLabel2);

        cbGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onGenreSelected(evt);
            }
        });
        jPanel1.add(cbGenre);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Buch");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBtBookPress(evt);
            }
        });
        jPanel5.add(jRadioButton1, new java.awt.GridBagConstraints());

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Autor");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBtAuthorPress(evt);
            }
        });
        jPanel5.add(jRadioButton2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel5);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("BÃ¼cher"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        bookList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onBookSelected(evt);
            }
        });
        jScrollPane1.setViewportView(bookList);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Buchdetails"));
        jPanel4.setLayout(new java.awt.BorderLayout());

        htmlOutput.setContentType("text/html"); // NOI18N
        jScrollPane3.setViewportView(htmlOutput);

        jPanel4.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onBtBookPress(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onBtBookPress
        this.currentSearchState = SearchState.BOOK;
        this.tfSearchText.setText(bookSearchText);
    }//GEN-LAST:event_onBtBookPress

    private void onBtAuthorPress(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onBtAuthorPress
        this.currentSearchState = SearchState.AUTHOR;
        this.tfSearchText.setText(authorSearchText);
    }//GEN-LAST:event_onBtAuthorPress

    private void onFilterTextChanged(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onFilterTextChanged
        try {
            if (this.currentSearchState == SearchState.BOOK) {
                // change book
                this.bookSearchText = this.tfSearchText.getText().trim();
            } else {
                // change author
                this.authorSearchText = this.tfSearchText.getText().trim();
            }

            // update gui
            this.updateFilters(
                    this.authorSearchText, this.authorSearchText,
                    this.bookSearchText,
                    this.currentGenre, this.currentPublisher
            );
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_onFilterTextChanged

    private void onBookSelected(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_onBookSelected
        Book b = this.bookList.getSelectedValue();
        this.htmlOutput.setText(b.renderToHTMLString());
    }//GEN-LAST:event_onBookSelected

    private void onPublisherSelected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onPublisherSelected
        try {
            String selected = (String) this.cbPublishers.getSelectedItem();
            if (selected != null) {
                this.currentPublisher = selected.equals("Publishers") ? "" : selected;
            }
            this.updateFilters(
                    this.authorSearchText, this.authorSearchText,
                    this.bookSearchText,
                    this.currentGenre, this.currentPublisher
            );
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_onPublisherSelected

    private void onGenreSelected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onGenreSelected
        try {
        String selected = (String) this.cbGenre.getSelectedItem();
        if (selected != null) {
            this.currentGenre = selected.equals("Genres") ? "" : selected;
        }
        this.updateFilters(
                    this.authorSearchText, this.authorSearchText,
                    this.bookSearchText,
                    this.currentGenre, this.currentPublisher
            );
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_onGenreSelected

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainGUI().setVisible(true);
                } catch (SQLException | ClassNotFoundException | FileNotFoundException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Book> bookList;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbGenre;
    private javax.swing.JComboBox<String> cbPublishers;
    private javax.swing.JEditorPane htmlOutput;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField tfSearchText;
    // End of variables declaration//GEN-END:variables
}
